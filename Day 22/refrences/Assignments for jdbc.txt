1. Write a Java program connects to a MySQL database, updates the salary of an employee with employee number 7900 to 1111, and prints the number of records updated.
2. Retrieves data from the 'employee' table, creates Emp objects from the retrieved data,stores these objects in a TreeSet (sorted by salary), and then prints the Emp objects.The Emp class seems to be a custom class representing an employee, but its definition is not provided in the code snippet means Create Emp class and implements Comparable interface and override compareTo() method for salary comparison.
3. Write a java program that provides information about each department's average salary, allowing for analysis and comparison of salary distributions across different departments.
Execute a SQL query to retrieve average salary per department, ordered by average salary descending order. Create a TreeSet to store the result set.
Note: We are not using Emp class here, as we are only retrieving department names and average salaries .If Emp class is intended to represent employees, it's not used in this context , Instead, we're directly printing the department name and average salary.
4. Write a java program to update the salary of employee according to that employee number which will take input through user.
5. Write a java program to retrieve and display the details of the employee corresponding to that particular job category from the 'employee' table?"
6. Write a java program to the user to input salary range, and then retrieve and display the details of employees whose salaries fall within that range from the 'employee' table.
7. //This code demonstrates how to retrieve employee data from a MySQL database and store it in custom A_03_Emp objects. The HashSet ensures that each employee object is stored only once, even if there are duplicate entries based on the equals() method (which compares empno). Finally, it iterates through the HashSet and prints the employee details. and also this will generate sequence according to hashCode which is defined in class A_03_Emp and deptno wise.
8. Write a Java program that retrieves employee data (employee number, name, job, salary, department) from a MySQL database and prints the details of each employee sorted by their sallery and after their empno in descending order.
9. This code retrieves employee data from a MySQL database and sorts them by job title in ascending order before printing the details and make ensure for duplicates jobs are not allowed.
10. Write a java program which aims to demonstrate the usage of callable statements in JDBC to retrieve data from a MySQL database. It includes a pre-defined stored procedure named allinfo that retrieves all employee information from the employee table using CallableStatement.
11. Write a java code retrieves employee data from a MySQL database and sorts them by salary in descending order before printing their details.
12. Write a java code allows a user to interactively update the salary of an employee in a MySQL database according to their mgr no which will given by user. 